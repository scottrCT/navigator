// MIXINS

//breakpoint to bp shortcode
@mixin bp($query, $no-query: false) {
  @include breakpoint($query, $no-query) {
    @content;
  }
}

// CSS3 MANIPULATION

@mixin bw() {
	-webkit-filter: grayscale(100%);
	-moz-filter: grayscale(100%);
	-ms-filter: grayscale(100%);
	-o-filter: grayscale(100%);
	filter: grayscale(100%);
}

@mixin transform($args) {
	-webkit-transform: #{$args};
	-moz-transform: #{$args};
	-ms-transform: #{$args};
	transform: #{$args};
}

@mixin css3-prefix($property, $value) {
	-webkit-#{$property}: #{$value};
	-khtml-#{$property}: #{$value};
	-moz-#{$property}: #{$value};
	-ms-#{$property}: #{$value};
	-o-#{$property}: #{$value};
	#{$property}: #{$value};
}

@mixin gradient-horizontal($fromColor:#0090cd, $toColor:#dd5cf1) {

	background: $fromColor; // Old browsers
	background: -moz-linear-gradient(left, $fromColor 0%, $toColor 100%); // FF3.6+
	background: -webkit-gradient(linear, left top, right top, color-stop(0%,$fromColor), color-stop(100%,$toColor)); // Chrome,Safari4+
	background: -webkit-linear-gradient(left, $fromColor 0%,$toColor 100%); // Chrome10+,Safari5.1+
	background: -o-linear-gradient(left, $fromColor 0%,$toColor 100%); // Opera 11.10+
	background: -ms-linear-gradient(left, $fromColor 0%,$toColor 100%); // IE10+
	background: linear-gradient(to right, $fromColor 0%,$toColor 100%); // W3C
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$fromColor}', endColorstr='#{$toColor}',GradientType=1 ); // IE6-9

}

@mixin gradient-vertical($fromColor:#0090cd, $toColor:#dd5cf1) {

	background: $fromColor; // Old browsers
	background: -moz-linear-gradient(top, $fromColor 0%, $toColor 100%); // FF3.6+
	background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,$fromColor), color-stop(100%,$toColor)); // Chrome,Safari4+
	background: -webkit-linear-gradient(top, $fromColor 0%,$toColor 100%); // Chrome10+,Safari5.1+
	background: -o-linear-gradient(top, $fromColor 0%,$toColor 100%); // Opera 11.10+
	background: -ms-linear-gradient(top, $fromColor 0%,$toColor 100%); // IE10+
	background: linear-gradient(to bottom, $fromColor 0%,$toColor 100%); // W3C
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#{$fromColor}', endColorstr='#{$toColor}',GradientType=0 ); // IE6-9

}

// ABSOLUTE POSITIONING
@mixin absolute ($top: auto, $right: auto, $bottom: auto, $left: auto) {
	top: $top;
	right: $right;
	bottom: $bottom;
	left: $left;
	position: absolute;
}

// Make a quick sqaure or circle
@mixin square($size) {
	width: $size;
	height: $size;
}

@mixin circle($size) {
	@include square($size);
	border-radius: 100%;
	display: inline-block;
}

// CSS COLUMNS
@mixin columns($count: 3, $gap: 10) {
	@include css3-prefix('column-count', $count);
	@include css3-prefix('column-gap', $gap);
	@include css3-prefix('column-break-inside', 'avoid');
}


//GRID

// Resets the susy settings for galleries
@mixin reset-gallery {
  &:nth-child(1n) {
    margin-left: 0;
    margin-right: gutter();
  }

  &:last-child {
    margin-right: 0;
  }
}

@mixin clearfix {
	&:after {
		content: "";
		display: table;
		clear: both;
	}
}

// VERTICAL ALIGN!
@mixin vertical-align {
	position: absolute;
	top: 50%;
	@include transform( translateY(-50%) );
}
@mixin horizontal-align {
	position: absolute;
	left: 50%;
	@include transform( translateX(-50%) );
}


//IMAGE RATIO :BEFORE ELEMENT WITH ABSOLUTE POSITIONING 3/4 RATIO
// Constrain a box to a given aspect ratio
@mixin ratio($width:1, $height:1) {
	position: relative;
	&:before {
		display: block;
		content: "";
		width: 100%;
		padding-top: ($height / $width) * 100%;
	}
	> .content, > .inside {
		position: absolute;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
	}
}

// HOVER
// Uses the html.no-touch class that's applied by Modernizr
@mixin hover {
	.no-touch & {
		&:hover {
			@content;
		}
	}
}

// TRANSITIONS & ANIMATION
@mixin ease($property:all, $speed:0.3s, $timing: $easeOutQuint) {
	-webkit-transition: $property $speed $timing;
	-moz-transition: $property $speed $timing;
	-ms-transition: $property $speed $timing;
	-o-transition: $property $speed $timing;
	transition: $property $speed $timing;
}

@mixin transition($args) {
	-webkit-transition: #{$args};
	-moz-transition: #{$args};
	-ms-transition: #{$args};
	-o-transition: #{$args};
	transition: #{$args};
}

@mixin transition-delay($delay) {
	-webkit-transition-delay: $delay;
	-moz-transition-delay: $delay;
	-ms-transition-delay: $delay;
	-o-transition-delay: $delay;
	transition-delay: $delay;
}

@mixin keyframes($animation-name) {
	@-webkit-keyframes $animation-name {
		@content;
	}
	@-moz-keyframes $animation-name {
		@content;
	}
	@-ms-keyframes $animation-name {
		@content;
	}
	@-o-keyframes $animation-name {
		@content;
	}
	@keyframes $animation-name {
		@content;
	}
}

@mixin animation($str) {
	-webkit-animation: #{$str};
	-moz-animation: #{$str};
	-ms-animation: #{$str};
	-o-animation: #{$str};
	animation: #{$str};
}

@mixin animation-delay($delay) {
	-webkit-animation-delay: $delay;
	-moz-animation-delay: $delay;
	-ms-animation-delay: $delay;
	-o-animation-delay: $delay;
	animation-delay: $delay;
}

@mixin appearanceNone {

	@include css3-prefix(appearance, none)

}
